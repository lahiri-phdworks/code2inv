{
	"nodes": {
		"1_2": {
			"cmd": "Assert",
			"rval": {
				"OP": "&&",
				"arg0": {
					"OP": "==",
					"arg0": {
						"OP": "%",
						"arg0": {
							"Var": "a_1"
						},
						"arg1": {
							"Var": "r_1"
						}
					},
					"arg1": {
						"Const": "0"
					}
				},
				"arg1": {
					"OP": ">",
					"arg0": {
						"Var": "r_1"
					},
					"arg1": {
						"Const": "0"
					}
				}
			}
		},
		"2_1": {
			"cmd": "if",
			"rval": {
				"OP": ">",
				"arg0": {
					"Var": "r_1"
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"3_1": {
			"cmd": "assign",
			"lval": {
				"Var": "r_1"
			},
			"rval": {
				"Var": "a_1"
			}
		},
		"3_2": {
			"cmd": "if",
			"rval": {
				"OP": "==",
				"arg0": {
					"OP": "%",
					"arg0": {
						"Var": "a_1"
					},
					"arg1": {
						"Var": "r_1"
					}
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"3_3": {
			"cmd": "TrueBranch"
		},
		"3_4": {
			"cmd": "FalseBranch"
		},
		"4_1": {
			"cmd": "Phi",
			"lval": {
				"Var": "a_3"
			},
			"rval": {
				"OP": "phi_merge",
				"arg0": {
					"Var": "a_2"
				},
				"arg1": {
					"Var": "a_1"
				}
			}
		},
		"4_2": {
			"cmd": "Phi",
			"lval": {
				"Var": "b_2"
			},
			"rval": {
				"OP": "phi_merge",
				"arg0": {
					"Var": "b_1"
				},
				"arg1": {
					"Var": "b_3"
				}
			}
		},
		"5_1": {
			"cmd": "assign",
			"lval": {
				"Var": "b_3"
			},
			"rval": {
				"OP": "-",
				"arg0": {
					"Var": "b_1"
				},
				"arg1": {
					"Var": "a_1"
				}
			}
		},
		"6_1": {
			"cmd": "assign",
			"lval": {
				"Var": "a_2"
			},
			"rval": {
				"OP": "-",
				"arg0": {
					"Var": "a_1"
				},
				"arg1": {
					"Var": "b_1"
				}
			}
		},
		"7_1": {
			"cmd": "if",
			"rval": {
				"OP": ">",
				"arg0": {
					"Var": "a_1"
				},
				"arg1": {
					"Var": "b_1"
				}
			}
		},
		"7_2": {
			"cmd": "TrueBranch"
		},
		"7_3": {
			"cmd": "FalseBranch"
		},
		"8_1": {
			"cmd": "Loop"
		},
		"8_2": {
			"cmd": "Phi",
			"lval": {
				"Var": "a_1"
			},
			"rval": {
				"OP": "phi_merge",
				"arg0": {
					"Var": "a_0"
				},
				"arg1": {
					"Var": "a_3"
				}
			}
		},
		"8_3": {
			"cmd": "Phi",
			"lval": {
				"Var": "b_1"
			},
			"rval": {
				"OP": "phi_merge",
				"arg0": {
					"Var": "b_0"
				},
				"arg1": {
					"Var": "b_2"
				}
			}
		},
		"8_4": {
			"cmd": "if",
			"rval": {
				"OP": "!=",
				"arg0": {
					"Var": "b_1"
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"8_5": {
			"cmd": "TrueBranch"
		},
		"8_6": {
			"cmd": "FalseBranch"
		},
		"9_1": {
			"cmd": "Assume",
			"rval": {
				"OP": ">",
				"arg0": {
					"Var": "a_0"
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"9_2": {
			"cmd": "Assume",
			"rval": {
				"OP": ">",
				"arg0": {
					"Var": "b_0"
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"9_3": {
			"cmd": "Assume",
			"rval": {
				"OP": ">",
				"arg0": {
					"Var": "r_0"
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"9_4": {
			"cmd": "Assume",
			"rval": {
				"OP": "==",
				"arg0": {
					"OP": "%",
					"arg0": {
						"Var": "a_0"
					},
					"arg1": {
						"Var": "r_0"
					}
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"9_5": {
			"cmd": "Assume",
			"rval": {
				"OP": "==",
				"arg0": {
					"OP": "%",
					"arg0": {
						"Var": "b_0"
					},
					"arg1": {
						"Var": "r_0"
					}
				},
				"arg1": {
					"Const": "0"
				}
			}
		},
		"ENTRY": {
			"cmd": "SKIP"
		},
		"EXIT": {
			"cmd": "SKIP"
		}
	},
	"control-flow": [
		[ "1_2", "EXIT" ],
		[ "2_1", "1_2" ],
		[ "3_1", "3_2" ],
		[ "3_2", "3_3" ],
		[ "3_2", "3_4" ],
		[ "3_3", "2_1" ],
		[ "3_4", "1_2" ],
		[ "4_1", "4_2" ],
		[ "4_2", "8_1" ],
		[ "5_1", "4_1" ],
		[ "6_1", "4_1" ],
		[ "7_1", "7_2" ],
		[ "7_1", "7_3" ],
		[ "7_2", "6_1" ],
		[ "7_3", "5_1" ],
		[ "8_1", "8_2" ],
		[ "8_2", "8_3" ],
		[ "8_3", "8_4" ],
		[ "8_4", "8_5" ],
		[ "8_4", "8_6" ],
		[ "8_5", "7_1" ],
		[ "8_6", "3_1" ],
		[ "9_1", "9_2" ],
		[ "9_2", "9_3" ],
		[ "9_3", "9_4" ],
		[ "9_4", "9_5" ],
		[ "9_5", "8_1" ],
		[ "ENTRY", "9_1" ]
	]
}
